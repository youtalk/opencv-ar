CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(OpenCV-AR)

SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED ON)
SET(Boost_USE_STATIC_RUNTIME OFF)
FIND_PACKAGE(Boost REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(/usr/include)
INCLUDE_DIRECTORIES(/usr/local/include)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIR})

LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib)
LINK_DIRECTORIES(/usr/lib)
LINK_DIRECTORIES(/usr/local/lib)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/lib)
SET(CMAKE_CXX_FLAGS "-std=c++0x -fpermissive -Wno-deprecated -Wno-sign-compare")
SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g -Wall")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
SET(CMAKE_CXX_LINK_FLAGS_DEBUG "-pg")

SET(VERSION "0.9.6")
SET(SOVERSION "0.9")

SET(SRC
  src/acgl.cpp src/acmath.cpp src/opencvar.cpp)

SET(LIB_EXTERNAL
  GL GLU glut ${Boost_LIBRARIES} ${OpenCV_LIBS})

ADD_LIBRARY(opencv-ar SHARED ${SRC})
TARGET_LINK_LIBRARIES(opencv-ar ${LIB_EXTERNAL})
SET_TARGET_PROPERTIES(opencv-ar PROPERTIES VERSION ${VERSION} SOVERSION ${SOVERSION})

SET(LIB
  opencv-ar ${LIB_EXTERNAL})

ADD_EXECUTABLE(ARTest example/ARTest.cpp)
ADD_DEPENDENCIES(ARTest ${SRC})
TARGET_LINK_LIBRARIES(ARTest ${LIB})
INSTALL(TARGETS opencv-ar LIBRARY DESTINATION lib)
INSTALL(DIRECTORY include/opencvar DESTINATION include)
